[
  {"query": "Send an email to aa@example.com with the subject 'Meeting' and the message 'Let’s meet on 2025-06-18 at 10am.'", "agents": ["mail_agent"]},
  {"query": "What events are on my calendar on 2025/06/18 and show me the details for the project kickoff meeting.", "agents": ["calendar_agent"]},
  {"query": "Create a Jira issue for a new bug report and update the status of issue JIRA-102 to 'In Progress'.", "agents": ["jira_agent"]},
  {"query": "Check the current weather in Seoul and let me know the chance of rain.", "agents": ["weather_agent"]},
  {"query": "Look up the contact with email address younghee21@example.com and also search for anyone whose number ends in 5678.", "agents": ["contact_agent"]},
  {"query": "Create a new calendar event titled 'Design Review' on Friday the 21st of June at 2pm and show me all upcoming events.", "agents": ["calendar_agent"]},
  {"query": "Check the temperature and fine dust level in Busan right now.", "agents": ["weather_agent"]},
  {"query": "Find the Jira issue with key JIRA-231 and list all issues currently marked as 'To Do'.", "agents": ["jira_agent"]},
  {"query": "Email my manager at manager@example.com saying I’ve submitted the report and ask if they need anything else.", "agents": ["mail_agent"]},
  {"query": "Search for a contact named Emily Park and get her details using her user ID if available.", "agents": ["contact_agent"]},
  {"query": "Check if there's any rain expected on the weekend of June 22–23 in New York.", "agents": ["weather_agent"]},
  {"query": "Create a Jira ticket for feature development titled 'User onboarding flow'.", "agents": ["jira_agent"]},
  {"query": "Schedule a team meeting for June 24th at 11am and show me its details.", "agents": ["calendar_agent"]},
  {"query": "Send an email to support-example@mail.com asking for a refund on my last order.", "agents": ["mail_agent"]},
  {"query": "Search for a contact whose phone number ends in 9988.", "agents": ["contact_agent"]},
  {"query": "List all events scheduled for the week of 2025-06-16 to 2025-06-22 on my calendar.", "agents": ["calendar_agent"]},
  {"query": "Tell me the air quality and precipitation chance in Tokyo on the 17th of June.", "agents": ["weather_agent"]},
  {"query": "Find all Jira issues currently marked as 'In Review'.", "agents": ["jira_agent"]},
  {"query": "Email hr@example.com to confirm my availability for the interview next Wednesday.", "agents": ["mail_agent"]},
  {"query": "Search for the contact with the user ID 'chulsoo98'.", "agents": ["contact_agent"]},
  {"query": "What is the current temperature in Paris?", "agents": ["weather_agent"]},
  {"query": "Create a calendar event for 'Lunch with Sarah' on 2025/06/20 at 12:30pm.", "agents": ["calendar_agent"]},
  {"query": "Send an email to team@example.com saying the weekly report has been uploaded.", "agents": ["mail_agent"]},
  {"query": "Get the details of the event titled '코드 리뷰' from my calendar.", "agents": ["calendar_agent"]},
  {"query": "Find the contact with the name 김철수.", "agents": ["contact_agent"]},
  {"query": "Create a new Jira issue titled 'Fix login timeout error' and assign it to me.", "agents": ["jira_agent"]},
  {"query": "Is there any fine dust in Daejeon?", "agents": ["weather_agent"]},
  {"query": "Search for a contact using the email address emily.choi@example.com.", "agents": ["contact_agent"]},
  {"query": "Show me all open Jira issues assigned to the 'To Do' status.", "agents": ["jira_agent"]},
  {"query": "Send an email to alex@example.com reminding them about the client meeting on June 18, 2025.", "agents": ["mail_agent"]},
  {"query": "Check the temperature in San Francisco on June 18, 2025 and send the forecast to john@example.com.", "agents": ["weather_agent", "mail_agent"]},
  {"query": "Create a Jira ticket for API performance issue and add an event for its review on Friday, June 20th.", "agents": ["jira_agent", "calendar_agent"]},
  {"query": "Look up 이영희’s contact by email and send her the meeting agenda.", "agents": ["contact_agent", "mail_agent"]},
  {"query": "Check if it will rain during the weekend of 2025/06/21 and add a calendar reminder to bring an umbrella.", "agents": ["weather_agent", "calendar_agent"]},
  {"query": "Find all Jira tasks marked as 'In Progress' and email the list to the dev team.", "agents": ["jira_agent", "mail_agent"]},
  {"query": "Search for 박민수’s contact and create a calendar event to call him on 2025-06-18.", "agents": ["contact_agent", "calendar_agent"]},
  {"query": "Get the fine dust level in Seoul and email it to my health tracker inbox.", "agents": ["weather_agent", "mail_agent"]},
  {"query": "Schedule a retrospective meeting for June 25 and send the invite to team@example.com.", "agents": ["calendar_agent", "mail_agent"]},
  {"query": "Check if there are any calendar events on June 18 and create a Jira task if the afternoon is free.", "agents": ["calendar_agent", "jira_agent"]},
  {"query": "Look up the phone number of John Smith and send him a confirmation email.", "agents": ["contact_agent", "mail_agent"]},
  {"query": "Create a calendar event for the design review on 2025/06/21 and send the invite to alice@example.com.", "agents": ["calendar_agent", "mail_agent"]},
  {"query": "Find the Jira issue PROJ-789 and add a follow-up meeting to my calendar on June 26th.", "agents": ["jira_agent", "calendar_agent"]},
  {"query": "Get the weather for Busan and add a calendar event if rain is expected.", "agents": ["weather_agent", "calendar_agent"]},
  {"query": "Search for the contact with the phone number ending in 6789 and send them a reminder email.", "agents": ["contact_agent", "mail_agent"]},
  {"query": "List all 'Done' Jira tasks and schedule a summary meeting for 2025-06-23.", "agents": ["jira_agent", "calendar_agent"]},
  {"query": "Check if there’s high fine dust of Incheon and email a warning to health@example.com.", "agents": ["weather_agent", "mail_agent"]},
  {"query": "Look up 이영희's contact info and add a lunch appointment with her to my calendar on Wednesday, June 19.", "agents": ["contact_agent", "calendar_agent"]},
  {"query": "Retrieve the weather and temperature in Tokyo and create a reminder to pack accordingly on 2025/06/20.", "agents": ["weather_agent", "calendar_agent"]},
  {"query": "Get the contact info for team@example.com and create a Jira task to update them weekly.", "agents": ["contact_agent", "jira_agent"]},
  {"query": "Create a new Jira bug report and notify qa_team@example.com by email.", "agents": ["jira_agent", "mail_agent"]},
  {"query": "Check the weather in London on June 18th and create a calendar event if it’s going to be sunny.", "agents": ["weather_agent", "calendar_agent"]},
  {"query": "Find Mark’s email address and send him an update about the project.", "agents": ["contact_agent", "mail_agent"]},
  {"query": "List my calendar events for Friday, the 20th of June and create a Jira task to prepare for the client demo.", "agents": ["calendar_agent", "jira_agent"]},
  {"query": "Search for the contact with ID coolsoo and schedule a call with them on June 18, 2025.", "agents": ["contact_agent", "calendar_agent"]},
  {"query": "Retrieve the weather forecast for June 23, 2025 and notify my manager via email if rain is expected.", "agents": ["weather_agent", "mail_agent"]},
  {"query": "Get all Jira issues labeled 'Bug' and add a meeting to review them on June 24.", "agents": ["jira_agent", "calendar_agent"]},
  {"query": "Find Emma’s contact and create a Jira task to follow up on her feedback.", "agents": ["contact_agent", "jira_agent"]},
  {"query": "Check air quality in Beijing and email the result to airwatch@example.com.", "agents": ["weather_agent", "mail_agent"]},
  {"query": "Search by phone number ending in 7890 and send a message confirming their attendance.", "agents": ["contact_agent", "mail_agent"]},
  {"query": "Create a Jira ticket for backend optimization and invite the dev team to a meeting on 2025/06/27 to discuss it.", "agents": ["jira_agent", "calendar_agent"]},
  {"query": "Check the weather in Tokyo on June 18, 2025, create a calendar event if it's sunny, and email the plan to my travel buddy.", "agents": ["weather_agent", "calendar_agent", "mail_agent"]},
  {"query": "Search for 김철수(coolsoo)’s contact info, create a Jira task for him feedback, and schedule a follow-up meeting on June 25.", "agents": ["contact_agent", "jira_agent", "calendar_agent"]},
  {"query": "Look up the contact with phone number ending in 7890, create a Jira ticket about their request, and send them a confirmation email.", "agents": ["contact_agent", "jira_agent", "mail_agent"]},
  {"query": "Get the fine dust level of Seoul for June 18th, add a calendar reminder if it’s high, and notify health@example.com.", "agents": ["weather_agent", "calendar_agent", "mail_agent"]},
  {"query": "Create a Jira task for the design issue, schedule a review meeting on Wednesday, June 25, and inform ui_team@example.com.", "agents": ["jira_agent", "calendar_agent", "mail_agent"]},
  {"query": "Find the contact for 박민수, email him the weather forecast for Busan, and add a note to my calendar on 2025/06/18.", "agents": ["contact_agent", "weather_agent", "mail_agent"]},
  {"query": "Check the air quality in Seoul, create a Jira issue if it's hazardous, and send a warning email to the teammail@example.com.", "agents": ["weather_agent", "jira_agent", "mail_agent"]},
  {"query": "Search for 이영희’s contact, schedule a project sync with her on 2025-06-20, and email the calendar invite.", "agents": ["contact_agent", "calendar_agent", "mail_agent"]},
  {"query": "Check if it's raining in Paris, create a Jira task if the event must be moved, and message the organizer.", "agents": ["weather_agent", "jira_agent", "mail_agent"]},
  {"query": "Get my calendar events for Friday, June 20, file a Jira issue about the schedule conflict, and notify ops@example.com.", "agents": ["calendar_agent", "jira_agent", "mail_agent"]},
  {"query": "Check the weather in New York, schedule a picnic if it’s sunny, and email the plan to friends@example.com.", "agents": ["weather_agent", "calendar_agent", "mail_agent"]},
  {"query": "Look up the contact for 박민수, create a Jira task based on his request, and invite him to a planning meeting.", "agents": ["contact_agent", "jira_agent", "calendar_agent"]},
  {"query": "Find the Jira issue for the client bug, schedule a call with the reporter on June 22, and send them a confirmation email.", "agents": ["jira_agent", "calendar_agent", "mail_agent"]},
  {"query": "Check the temperature in Jeju on June 18, create a Jira task if rain is expected, and notify the logistics team.", "agents": ["weather_agent", "jira_agent", "mail_agent"]},
  {"query": "Search for 이영희’s contact info, create a calendar event for a check-in on 2025-06-24, and send her the meeting link.", "agents": ["contact_agent", "calendar_agent", "mail_agent"]},
  {"query": "Get the air quality of Seoul, file a Jira task if it’s above safe levels, and schedule a safety briefing on June 19.", "agents": ["weather_agent", "jira_agent", "calendar_agent"]},
  {"query": "Find the Jira task assigned to me, check for any conflicting calendar events on June 20th, and email my manager if rescheduling is needed.", "agents": ["jira_agent", "calendar_agent", "mail_agent"]},
  {"query": "Search by email for Michael, file a Jira request about his onboarding, and schedule a kickoff meeting.", "agents": ["contact_agent", "jira_agent", "calendar_agent"]},
  {"query": "Check if it's going to snow on the weekend of June 21–22, create a Jira ticket if travel will be delayed, and alert transport@example.com.", "agents": ["weather_agent", "jira_agent", "mail_agent"]},
  {"query": "Get my events for Tuesday, June 24, look up the contact for all attendees, and send them the updated agenda.", "agents": ["calendar_agent", "contact_agent", "mail_agent"]},
  {"query": "Check the current temperature in Busan, create a Jira issue if strong winds are expected, and send an alert to safety@example.com.", "agents": ["weather_agent", "jira_agent", "mail_agent"]},
  {"query": "Look up Emily’s contact details, send her the latest sprint summary, and book a meeting for the week of June 24.", "agents": ["contact_agent", "mail_agent", "calendar_agent"]},
  {"query": "Find the air quality in Incheon, notify the school if it’s unhealthy, and schedule a parent meeting.", "agents": ["weather_agent", "mail_agent", "calendar_agent"]},
  {"query": "Get the details for the team sync on June 20, file a Jira task for follow-up actions, and email everyone who attended.", "agents": ["calendar_agent", "jira_agent", "mail_agent"]},
  {"query": "Check the status of Jira issue PROJ-101, find the reporter’s contact, and send them a status update.", "agents": ["jira_agent", "contact_agent", "mail_agent"]},
  {"query": "Look up the contact by ID chulsoo98, add a call event to my calendar on June 19, and file a Jira issue for discussion points.", "agents": ["contact_agent", "calendar_agent", "jira_agent"]},
  {"query": "Get the weather forecast of Incheon, schedule an outdoor workshop if it's clear, and inform the team via email.", "agents": ["weather_agent", "calendar_agent", "mail_agent"]},
  {"query": "Find all Jira issues marked 'Blocked', email the project manager, and set a meeting to review them on 2025-06-26.", "agents": ["jira_agent", "mail_agent", "calendar_agent"]},
  {"query": "Check if the air quality is safe on June 18, look up the contact for our health officer, and send them a report.", "agents": ["weather_agent", "contact_agent", "mail_agent"]},
  {"query": "Get my meetings for June 17, find contact emails of all attendees, and send them a quick reminder.", "agents": ["calendar_agent", "contact_agent", "mail_agent"]},
  {"query": "Get the current temperature in Seoul and add 10 to it.", "agents": ["weather_agent", "math"]},
  {"query": "Retrieve the fine dust level in Busan and divide it by 2.", "agents": ["weather_agent", "math"]},
  {"query": "Get the chance of precipitation in Tokyo and subtract 15 from it.", "agents": ["weather_agent", "math"]},
  {"query": "Check the current temperature in New York and convert it from Celsius to Fahrenheit.", "agents": ["weather_agent", "math"]},
  {"query": "Find the air quality index in Beijing and multiply it by 1.2 to adjust for elevation.", "agents": ["weather_agent", "math"]},
  {"query": "Get the precipitation chance in Jeju and calculate the remaining dry chance.", "agents": ["weather_agent", "math"]},
  {"query": "Check the temperature in Paris and compare it with a threshold of 30 degrees.", "agents": ["weather_agent", "math"]},
  {"query": "Retrieve the fine dust level in Daejeon and add 5 for indoor concentration estimation.", "agents": ["weather_agent", "math"]},
  {"query": "Check the precipitation probability for Busan and calculate how many hours might be dry in a 24-hour day.", "agents": ["weather_agent", "math"]},
  {"query": "Get the current temperature and subtract it from 100 to calculate a discomfort index.", "agents": ["weather_agent", "math"]}
]